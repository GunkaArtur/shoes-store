{"version":3,"sources":["Redux/actions.js","Redux/cardReducer.js","Redux/itemsReducer.js","Redux/rootReducer.js","Redux/store.js","Components/Item.jsx","Components/Items.jsx","Components/Card.jsx","App.js","index.js"],"names":["initialState","items","data","rootReducer","combineReducers","state","action","card","type","payload","filter","item","id","store","createStore","compose","window","__REDUX_DEVTOOLS_EXTENSION__","Item","name","description","img","price","useState","modal","setModal","Meta","Card","dispatch","useDispatch","onAddToCard","addItem","style","width","hoverable","cover","alt","src","title","marginBottom","onClick","visible","footer","onCancel","connect","map","key","desctiption","visibility","onClose","useSelector","totalPrice","forEach","columns","dataIndex","render","text","record","removeItem","DeleteOutlined","dataSource","pagination","level","notification","message","App","Header","Layout","Content","Footer","Title","Typography","showCard","setShowCard","count","length","className","display","justifyContent","alignItems","color","icon","ShoppingCartOutlined","margin","flexWrap","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ff4a978c.chunk.js","sourcesContent":["export const ADD_ITEM_TO_CARD = \"ADD_ITEM_TO_CARD\";\nexport const REMOVE_ITEM_FROM_CARD = \"REMOVE_ITEM_FROM_CARD\";\nexport const BUY = \"BUY\";\n\nexport function addItem(item) {\n  return {\n    type: ADD_ITEM_TO_CARD,\n    payload: item\n  };\n}\nexport const removeItem = id => {\n  return {\n    type: REMOVE_ITEM_FROM_CARD,\n    payload: id\n  };\n};\nexport const buyItems = () => {\n  return {\n    type: BUY\n  };\n};\n","import { ADD_ITEM_TO_CARD, REMOVE_ITEM_FROM_CARD, BUY } from \"./actions\";\n\nconst initialState = { items: [] };\n\nexport function card(state = initialState, action) {\n  switch (action.type) {\n    case ADD_ITEM_TO_CARD: {\n      return { ...state, items: [...state.items, action.payload] };\n    }\n    case REMOVE_ITEM_FROM_CARD:\n      return state.items\n        ? { items: state.items.filter(item => item.id !== action.payload) }\n        : state;\n    case BUY:\n      return { items: [] };\n    default:\n      return state;\n  }\n}\n","import * as data from \"../store.json\";\n\nconst initialState = {\n  items: [data.items]\n};\n\nexport function items(state, action) {\n  switch (action) {\n    default:\n      return initialState;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport { card } from \"./cardReducer\";\nimport { items } from \"./itemsReducer\";\n\nexport const rootReducer = combineReducers({\n  items: items,\n  card: card\n});\n","import { createStore, compose } from \"redux\";\nimport { rootReducer } from \"./rootReducer\";\n\nexport const store = createStore(\n  rootReducer,\n  compose(\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n","import React, { useState } from \"react\";\nimport { addItem } from \"../Redux/actions\";\nimport { useDispatch } from \"react-redux\";\nimport { Card, Button, Modal, Typography } from \"antd\";\n\nconst Item = item => {\n  const { name, description, img, price } = item;\n  const [modal, setModal] = useState(false);\n  const { Meta } = Card;\n  const dispatch = useDispatch();\n\n  const onAddToCard = () => {\n    dispatch(addItem(item));\n  };\n\n  return (\n    <div style={{ width: 250 }}>\n      <Card hoverable cover={<img alt={name} src={img} />}>\n        <Meta\n          title={name}\n          description={description}\n          style={{ marginBottom: 20 }}\n        />\n        <Typography>Price: {price}$</Typography>\n        <Button onClick={() => setModal(true)}>View</Button>\n        <Button onClick={onAddToCard}>Add to card</Button>\n        <Modal\n          title={name}\n          visible={modal}\n          footer={null}\n          onCancel={() => setModal(false)}\n        >\n          <img src={img} alt={name} />\n          <Typography>{name}</Typography>\n          <Typography>{description}</Typography>\n          <Typography> Price: {price}$</Typography>\n          <Button onClick={onAddToCard}>Add to card</Button>\n        </Modal>\n      </Card>\n    </div>\n  );\n};\n\nexport default Item;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Item from \"./Item\";\n\nconst Items = ({ items }) => {\n  return items.map(item => (\n    <Item\n      key={item.id}\n      id={item.id}\n      name={item.name}\n      desctiption={item.description}\n      price={item.price}\n      img={item.img}\n    />\n  ));\n};\n\nconst mapStateToProps = state => {\n  return {\n    items: state.items.items[0]\n  };\n};\n\nexport default connect(mapStateToProps, null)(Items);\n","import React from \"react\";\nimport { Button, Modal, Table, Typography, notification } from \"antd\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { DeleteOutlined } from \"@ant-design/icons\";\nimport { buyItems, removeItem } from \"../Redux/actions\";\n\nconst Card = ({ visibility, onClose }) => {\n  const dispatch = useDispatch();\n  const items = useSelector(state => state.card.items);\n  let totalPrice = 0;\n\n  const onClickBuy = () => {\n    dispatch(buyItems());\n    notification[\"success\"]({\n      message: \"Ваш заказ принят!\",\n      description: \"Спасибо за покупку\"\n    });\n  };\n  const onItemDeleted = id => {\n    dispatch(removeItem(id));\n  };\n\n  items &&\n    items.forEach(item => {\n      totalPrice = totalPrice + item.price;\n    });\n\n  const columns = [\n    {\n      title: \"Name\",\n      dataIndex: \"name\"\n    },\n    {\n      title: \"Price\",\n      dataIndex: \"price\"\n    },\n    {\n      title: \"Action\",\n      key: \"action\",\n      render: (text, record) => (\n        <a onClick={() => onItemDeleted(record.id)}>\n          <DeleteOutlined />\n        </a>\n      )\n    }\n  ];\n\n  return (\n    <Modal title={\"Card\"} footer={null} visible={visibility} onCancel={onClose}>\n      <Table columns={columns} dataSource={items} pagination={false} />\n      <Typography level={4}>Total price: {totalPrice}$</Typography>\n      <Button onClick={onClickBuy}>Buy</Button>\n    </Modal>\n  );\n};\n\nexport default Card;\n","import React, { useState } from \"react\";\nimport { Layout, Typography, Button } from \"antd\";\nimport Items from \"./Components/Items\";\nimport Card from \"./Components/Card\";\nimport { ShoppingCartOutlined } from \"@ant-design/icons\";\nimport { useSelector } from \"react-redux\";\n\nfunction App() {\n  const { Header, Content, Footer } = Layout;\n  const { Title } = Typography;\n  const [showCard, setShowCard] = useState(false);\n\n  const count = useSelector(state => state.card.items.length);\n\n  const onCardClose = () => {\n    setShowCard(false);\n  };\n\n  return (\n    <div className=\"app\">\n      <Layout>\n        <Header\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\"\n          }}\n        >\n          <Title level={3} style={{ color: \"#fff\" }}>\n            Gunya Store\n          </Title>\n          <Button\n            onClick={() => setShowCard(true)}\n            icon={<ShoppingCartOutlined />}\n          >\n            Card {count}\n          </Button>\n        </Header>\n        <Content\n          style={{\n            margin: \"24px 16px 0\",\n            display: \"flex\",\n            flexWrap: \"wrap\",\n            justifyContent: \"space-between\"\n          }}\n        >\n          <Items />\n        </Content>\n\n        <Footer>Footer</Footer>\n      </Layout>\n      {showCard && <Card visibility={showCard} onClose={onCardClose} />}\n    </div>\n  );\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from \"react-redux\"\nimport {store} from \"./Redux/store\"\nimport './index.css';\nimport 'antd/dist/antd.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n          <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}